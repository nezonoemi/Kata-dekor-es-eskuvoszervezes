//b√©relhet≈ë term√©kek r√©sz
// Kos√°r tartalm√°nak kezel√©se
const cart = [];
const cartCountElement = document.getElementById('cart-count');

// Kos√°r sz√°ml√°l√≥ friss√≠t√©se
function updateCartCount() {
  cartCountElement.textContent = cart.length;
}

// Term√©k hozz√°ad√°sa a kos√°rhoz
function addToCart(productName, price) {
  cart.push({ name: productName, price: price });
  alert(`${productName} hozz√°adva a kos√°rhoz!`);
  updateCartCount();
}

// Term√©k elt√°vol√≠t√°sa a kos√°rb√≥l
function removeFromCart(productName) {
  const index = cart.findIndex(item => item.name === productName);
  if (index > -1) {
    cart.splice(index, 1);
    alert(`${productName} elt√°vol√≠tva a kos√°rb√≥l!`);
    updateCartCount();
  } else {
    alert(`${productName} nincs a kos√°rban!`);
  }
}

// Esem√©nykezel≈ëk a kos√°r gombokhoz
document.querySelectorAll('.cart-btn').forEach(button => {
  button.addEventListener('click', event => {
    const productName = event.target.getAttribute('data-product-name');
    const price = event.target.getAttribute('data-price');
    addToCart(productName, price);
  });
});

// Esem√©nykezel≈ëk a T√∂rl√©s gombokhoz
document.querySelectorAll('.remove-btn').forEach(button => {
  button.addEventListener('click', event => {
    const productName = event.target.getAttribute('data-product-name');
    removeFromCart(productName);
  });
});


//fi√≥kom regiszr√°ci√≥/bel√©p√©s
function toggleForm(form) {
  let loginForm = document.getElementById('login-form');
  let registerForm = document.getElementById('register-form');

  if (form === 'login') {
      loginForm.classList.remove('d-none');
      registerForm.classList.add('d-none');
  } else if (form === 'register') {
      registerForm.classList.remove('d-none');
      loginForm.classList.add('d-none');
  }
}


//aj√°nlat k√©r√©s √©s lead√°s 
const target = document.getElementById("target");

document.addEventListener("DOMContentLoaded", () => {
  const offerForm = document.getElementById("offerForm");
  const deleteButton = document.getElementById("deleteButton");
  const target = document.getElementById("target");

  if (!offerForm || !deleteButton || !target) {
      console.error("‚ùå Hiba: Egy vagy t√∂bb elem nem tal√°lhat√≥ az oldalon!");
      return;
  }

  offerForm.addEventListener("submit", async (event) => {
      event.preventDefault(); 

      const last_name = document.getElementById("vezeteknev").value.trim();
      const first_name = document.getElementById("keresztnev").value.trim();
      const email = document.getElementById("email").value.trim();
      const note = document.getElementById("note").value.trim();

      if (!last_name || !first_name || !email || !note) {
          target.innerHTML = `<div class="alert alert-danger">‚ö† Minden mez≈ët ki kell t√∂lteni!</div>`;
          return;
      }

      try {
          const response = await fetch("http://localhost:3443/api/quote_request", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ last_name, first_name, email, note })
          });

          if (!response.ok) {
              const errorText = await response.text();
              throw new Error(`Hiba: ${errorText}`);
          }

          const data = await response.json();
          target.innerHTML = `<div class="alert alert-success">‚úÖ Sikeres aj√°nlatk√©r√©s! <br> Rendel√©s ID: ${data.id}</div>`;

          offerForm.reset(); 

      } catch (error) {
          console.error("‚ùå Hiba t√∂rt√©nt:", error);
          target.innerHTML = `<div class="alert alert-danger">‚ùå Hiba t√∂rt√©nt: ${error.message}</div>`;
      }
  });

  deleteButton.addEventListener("click", async () => {
      const email = document.getElementById("email").value.trim();

      if (!email) {
          target.innerHTML = `<div class="alert alert-danger">‚ö† Add meg az e-mail c√≠medet a t√∂rl√©shez!</div>`;
          return;
      }

      try {
          const response = await fetch(`http://localhost:3443/api/quote_request?email=${email}`, {
              method: "DELETE",
              headers: { "Content-Type": "application/json" }
          });

          if (!response.ok) {
              const errorText = await response.text();
              throw new Error(`Hiba: ${errorText}`);
          }

          target.innerHTML = `<div class="alert alert-warning">üóë Aj√°nlat t√∂r√∂lve!</div>`;

      } catch (error) {
          console.error("‚ùå Hiba t√∂rl√©sn√©l:", error);
          target.innerHTML = `<div class="alert alert-danger">‚ùå Hiba t√∂rt√©nt: ${error.message}</div>`;
      }
  });
});
